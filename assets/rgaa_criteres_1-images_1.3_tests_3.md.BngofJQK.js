import{_ as t,c as a,o as i,ag as l}from"./chunks/framework.BSOECjnK.js";const m=JSON.parse('{"title":"Pour chaque bouton de type image (balise <input> avec l’attribut type=\\"image\\"), ayant une alternative textuelle, cette alternative est-elle pertinente (hors cas particuliers) ?","description":"","frontmatter":{"title":"Pour chaque [bouton](#bouton-formulaire) de type `image` (balise `<input>` avec l’attribut `type=\\"image\\"`), ayant une [alternative textuelle](#alternative-textuelle-image), cette alternative est-elle pertinente (hors cas particuliers) ?","steps":["S’il est présent, le contenu de l’attribut `alt` est pertinent ;","S’il est présent, le contenu de l’attribut `title` est pertinent ;","S’il est présent, le contenu de l’attribut WAI-ARIA `aria-label` est pertinent ;","S’il est présent, le [passage de texte](#passage-de-texte-lie-par-aria-labelledby-ou-aria-describedby) associé via l’attribut WAI-ARIA `aria-labelledby` est pertinent."]},"headers":[],"relativePath":"rgaa/criteres/1-images/1.3/tests/3.md","filePath":"rgaa/criteres/1-images/1.3/tests/3.md"}'),r={name:"rgaa/criteres/1-images/1.3/tests/3.md"};function s(n,e,o,u,c,p){return i(),a("div",null,[...e[0]||(e[0]=[l("<ol><li>Retrouver dans le document les éléments <code>&lt;input&gt;</code> pourvus de l’attribut <code>type=&quot;image&quot;</code> et d’une alternative textuelle ;</li><li>Pour chaque élément <code>&lt;input&gt;</code> pourvu de l’attribut <code>type=&quot;image&quot;</code>, vérifier que l’alternative textuelle est pertinente ;</li><li>Si c’est le cas pour chaque image, <strong>le test est validé</strong>.</li></ol>",1)])])}const g=t(r,[["render",s]]);export{m as __pageData,g as default};
