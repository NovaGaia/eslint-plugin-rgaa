import{_ as t,c as n,o,ag as a}from"./chunks/framework.BSOECjnK.js";const m=JSON.parse('{"title":"Motif de conception","description":"","frontmatter":{"title":"Motif de conception"},"headers":[],"relativePath":"rgaa/glossaire/motif-de-conception.md","filePath":"rgaa/glossaire/motif-de-conception.md"}'),i={name:"rgaa/glossaire/motif-de-conception.md"};function s(r,e,c,p,l,d){return o(),n("div",null,[...e[0]||(e[0]=[a('<h1 id="motif-de-conception" tabindex="-1">Motif de conception <a class="header-anchor" href="#motif-de-conception" aria-label="Permalink to &quot;Motif de conception&quot;">​</a></h1><p>Un motif de conception <span lang="en">(Design Pattern)</span> est un modèle défini dans le document <span lang="en"><a href="http://www.w3.org/TR/wai-aria-practices/" target="_blank" rel="noreferrer">WAI-ARIA 1.1 Authoring Practices</a></span> qui décrit la structure, les rôles et propriétés et le comportement clavier que doit respecter un composant JavaScript (widget).</p><p>Il est recommandé que les composants développés en JavaScript utilisant des attributs WAI-ARIA correspondant à un motif de conception respectent celui-ci. Attention cependant, les motifs de conception ne sont pas tous adaptés à un usage non applicatif, en particulier pour les sites proposant un affichage en contexte mobile.</p><p>Note 1 : compte tenu du manque de support de certaines propriétés et de certains rôles WAI-ARIA et de la grande variabilité des situations dans lesquelles un composant JavaScript peut être proposé, il est possible d’adapter des motifs de conception à des contextes ou des utilisations particulières. Dans ce cas, le motif de conception adapté doit :</p><ul><li>Respecter la structure générale : par exemple un ensemble de panneaux (rôle WAI-ARIA <code>tabpanel</code>) d’un système d’onglets est forcément lié à un ensemble d’onglets (rôle WAI-ARIA <code>tablist</code>) ;</li><li>Utiliser en remplacement d’un rôle ou d’une propriété WAI-ARIA mal supporté, un rôle ou une propriété WAI-ARIA équivalent, offrant un comportement et une restitution similaire.</li></ul><p>Note 2 : Le fait d’enrichir un motif de conception de rôles ou propriétés WAI-ARIA supplémentaires dont la compatibilité avec l’accessibilité est contrôlée par le test de restitution sur l’environnement de test (ou « base de référence ») ne constitue pas une adaptation d’un motif de conception. Par exemple l’ajout de l’attribut WAI-ARIA <code>aria-hidden</code> sur les panneaux (rôle WAI-ARIA <code>tabpanel</code>) d’un système d’onglets ne définit pas un motif de conception adapté.</p>',6)])])}const f=t(i,[["render",s]]);export{m as __pageData,f as default};
