import{_ as t,c as a,o as i,ag as l}from"./chunks/framework.BSOECjnK.js";const p=JSON.parse('{"title":"Chaque bouton de type image (balise <input> avec l’attribut type=\\"image\\") a-t-il une alternative textuelle ?","description":"","frontmatter":{"title":"Chaque bouton de type `image` (balise `<input>` avec l’attribut `type=\\"image\\"`) a-t-il une [alternative textuelle](#alternative-textuelle-image) ?"},"headers":[],"relativePath":"rgaa/criteres/1-images/1.1/tests/3.md","filePath":"rgaa/criteres/1-images/1.1/tests/3.md"}'),o={name:"rgaa/criteres/1-images/1.1/tests/3.md"};function r(u,e,s,n,d,c){return i(),a("div",null,[...e[0]||(e[0]=[l("<ol><li>Retrouver dans le document les éléments <code>&lt;input&gt;</code> pourvus de l’attribut <code>type=&quot;image&quot;</code> ;</li><li>Pour chaque élément <code>&lt;input&gt;</code> pourvu de l’attribut type=&quot;image&quot;, déterminer si l’image utilisée est porteuse d’information ;</li><li>Vérifier que l’élément <code>&lt;input&gt;</code> est pourvu au moins d’une alternative textuelle parmi les suivantes : <ul><li>Passage de texte associé via l’attribut WAI-ARIA <code>aria-labelledby</code> ;</li><li>Contenu de l’attribut WAI-ARIA <code>aria-label</code> ;</li><li>Contenu de l’attribut <code>alt</code> ;</li><li>Contenu de l’attribut <code>title</code>.</li></ul></li><li>Si au moins une alternative textuelle est trouvée, <strong>le test est validé</strong>.</li></ol>",1)])])}const g=t(o,[["render",r]]);export{p as __pageData,g as default};
