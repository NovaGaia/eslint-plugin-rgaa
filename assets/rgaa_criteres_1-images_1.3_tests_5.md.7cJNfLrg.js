import{_ as t,c as a,o as r,ag as i}from"./chunks/framework.BSOECjnK.js";const m=JSON.parse('{"title":"Pour chaque image embarquée (balise <embed> avec l’attribut type=\\"image/…\\") porteuse d’information, ayant une alternative textuelle ou un contenu alternatif, cette alternative est-elle pertinente (hors cas particuliers) ?","description":"","frontmatter":{"title":"Pour chaque image embarquée (balise `<embed>` avec l’attribut `type=\\"image/…\\"`) [porteuse d’information](#image-porteuse-d-information), ayant une [alternative textuelle](#alternative-textuelle-image) ou un [contenu alternatif](#contenu-alternatif), cette alternative est-elle pertinente (hors cas particuliers) ?","steps":["S’il est présent, le contenu de l’attribut `title` est pertinent ;","S’il est présent, le contenu de l’attribut WAI-ARIA `aria-label` est pertinent ;","S’il est présent, le [passage de texte](#passage-de-texte-lie-par-aria-labelledby-ou-aria-describedby) associé via l’attribut WAI-ARIA `aria-labelledby` est pertinent ;","S’il est présent le [contenu alternatif](#contenu-alternatif) est pertinent."]},"headers":[],"relativePath":"rgaa/criteres/1-images/1.3/tests/5.md","filePath":"rgaa/criteres/1-images/1.3/tests/5.md"}'),l={name:"rgaa/criteres/1-images/1.3/tests/5.md"};function n(s,e,o,u,c,d){return r(),a("div",null,[...e[0]||(e[0]=[i("<ol><li>Retrouver dans le document les éléments <code>&lt;embed&gt;</code> pourvus de l’attribut <code>type=&quot;image/…&quot;</code> et d’une alternative textuelle ;</li><li>Pour chaque élément <code>&lt;embed&gt;</code> pourvu de l’attribut <code>type=&quot;image/…&quot;</code>, vérifier que l’alternative textuelle est pertinente ;</li><li>Si c’est le cas pour chaque image, <strong>le test est validé</strong>.</li></ol>",1)])])}const g=t(l,[["render",n]]);export{m as __pageData,g as default};
