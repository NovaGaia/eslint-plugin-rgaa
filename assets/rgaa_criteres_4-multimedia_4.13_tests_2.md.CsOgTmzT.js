import{_ as n,c as o,o as l,j as e,a as t}from"./chunks/framework.BSOECjnK.js";const v=JSON.parse('{"title":"Chaque média temporel et non temporel qui possède une alternative compatible avec les technologies d’assistance, vérifie-t-il une de ces conditions ?","description":"","frontmatter":{"title":"Chaque [média temporel](#media-temporel-type-son-video-et-synchronise) et [non temporel](#media-non-temporel) qui possède une alternative [compatible avec les technologies d’assistance](#compatible-avec-les-technologies-d-assistance), vérifie-t-il une de ces conditions ?","steps":["L’alternative est adjacente au [média temporel](#media-temporel-type-son-video-et-synchronise) ou [non temporel](#media-non-temporel) ;","L’alternative est accessible via un [lien ou bouton adjacent](#lien-ou-bouton-adjacent) ;","Un mécanisme permet de remplacer le [média temporel](#media-temporel-type-son-video-et-synchronise) ou [non temporel](#media-non-temporel) par son alternative."]},"headers":[],"relativePath":"rgaa/criteres/4-multimedia/4.13/tests/2.md","filePath":"rgaa/criteres/4-multimedia/4.13/tests/2.md"}'),i={name:"rgaa/criteres/4-multimedia/4.13/tests/2.md"};function s(r,a,m,c,d,u){return l(),o("div",null,[...a[0]||(a[0]=[e("ol",null,[e("li",null,"Retrouver dans le document les médias temporels et non temporels qui possèdent une alternative compatible avec les technologies d’assistance ;"),e("li",null,[t("Pour chaque média, vérifier que : "),e("ul",null,[e("li",null,"Soit l’alternative est adjacente au média temporel ou non temporel ;"),e("li",null,"Soit l’alternative est accessible au moyen d’un lien ou d’un bouton adjacent ;"),e("li",null,"Soit un mécanisme permet de remplacer le média temporel ou non temporel par son alternative.")])]),e("li",null,[t("Si c’est le cas pour chaque média temporel ou non temporel, "),e("strong",null,"le test est validé"),t(".")])],-1)])])}const h=n(i,[["render",s]]);export{v as __pageData,h as default};
