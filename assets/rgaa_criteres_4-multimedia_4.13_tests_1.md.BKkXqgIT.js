import{_ as a,c as i,o as l,j as e,a as t}from"./chunks/framework.BSOECjnK.js";const v=JSON.parse('{"title":"Chaque média temporel et non temporel vérifie-t-il une de ces conditions (hors cas particuliers) ?","description":"","frontmatter":{"title":"Chaque [média temporel](#media-temporel-type-son-video-et-synchronise) et [non temporel](#media-non-temporel) vérifie-t-il une de ces conditions (hors cas particuliers) ?","steps":["Le nom, le rôle, la valeur, le paramétrage et les changements d’états des composants d’interfaces sont accessibles aux technologies d’assistance via une API d’accessibilité ;","Une alternative [compatible avec une API d’accessibilité](#compatible-avec-les-technologies-d-assistance) permet d’accéder aux mêmes fonctionnalités."]},"headers":[],"relativePath":"rgaa/criteres/4-multimedia/4.13/tests/1.md","filePath":"rgaa/criteres/4-multimedia/4.13/tests/1.md"}'),n={name:"rgaa/criteres/4-multimedia/4.13/tests/1.md"};function o(r,s,c,m,d,u){return l(),i("div",null,[...s[0]||(s[0]=[e("ol",null,[e("li",null,"Retrouver dans le document les médias temporels et non temporels ;"),e("li",null,[t("Pour chaque média, vérifier que : "),e("ul",null,[e("li",null,"Soit le nom, le rôle, la valeur, le paramétrage et les changements d’états des composants d’interfaces sont accessibles aux technologies d’assistance via une API d’accessibilité (par exemple, les zones mises à jour dynamiquement dans un lecteur vidéo sont correctement restituées) ;"),e("li",null,"Soit une alternative compatible avec une API d’accessibilité permet d’accéder aux mêmes fonctionnalités.")])]),e("li",null,[t("Si c’est le cas pour chaque média temporel ou non temporel, "),e("strong",null,"le test est validé"),t(".")])],-1)])])}const f=a(n,[["render",o]]);export{v as __pageData,f as default};
