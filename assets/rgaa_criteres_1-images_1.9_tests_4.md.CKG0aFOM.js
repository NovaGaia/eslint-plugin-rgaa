import{_ as t,c as i,o as a,ag as s}from"./chunks/framework.BSOECjnK.js";const m=JSON.parse('{"title":"Chaque image vectorielle pourvue d’une légende (balise <svg> associée à une légende adjacente), vérifie-t-elle, si nécessaire, ces conditions ?","description":"","frontmatter":{"title":"Chaque image vectorielle pourvue d’une [légende](#legende-d-image) (balise `<svg>` associée à une [légende](#legende-d-image) adjacente), vérifie-t-elle, si nécessaire, ces conditions ?","steps":["L’image vectorielle (balise `<svg>`) et sa [légende](#legende-d-image) adjacente sont contenues dans une balise `<figure>` ;","La balise `<figure>` possède un attribut WAI-ARIA `role=\\"figure\\"` ou `role=\\"group\\"` ;","La balise `<figure>` possède un attribut WAI-ARIA `aria-label` dont le contenu est identique au contenu de la [légende](#legende-d-image) ;","La [légende](#legende-d-image) est contenue dans une balise `<figcaption>`."]},"headers":[],"relativePath":"rgaa/criteres/1-images/1.9/tests/4.md","filePath":"rgaa/criteres/1-images/1.9/tests/4.md"}'),l={name:"rgaa/criteres/1-images/1.9/tests/4.md"};function n(o,e,d,r,u,c){return a(),i("div",null,[...e[0]||(e[0]=[s("<ol><li>Retrouver dans le document les images vectorielles pourvues d’une légende (élément <code>&lt;svg&gt;</code>) ;</li><li>Pour chaque image, vérifier que : <ul><li>L’image et sa légende sont contenues dans une balise <code>&lt;figure&gt;</code> ;</li><li>La balise <code>&lt;figure&gt;</code> possède une propriété WAI-ARIA <code>role=&quot;figure&quot;</code> ou <code>role=&quot;group&quot;</code> ;</li><li>La balise <code>&lt;figure&gt;</code> possède un attribut WAI-ARIA <code>aria-label</code> dont le contenu est identique au contenu de la légende ;</li><li>La légende est contenue dans une balise <code>&lt;figcaption&gt;</code>.</li></ul></li><li>Si c’est le cas pour chaque image, <strong>le test est validé</strong>.</li></ol>",1)])])}const p=t(l,[["render",n]]);export{m as __pageData,p as default};
