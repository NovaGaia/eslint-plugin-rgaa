import{_ as t,c as o,o as a,ag as s}from"./chunks/framework.BSOECjnK.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{"WCAG":[{"successCriterion":"1.3.5","title":"Identify Input Purpose","level":"AA"}],"Techniques":["H98"]},"headers":[],"relativePath":"rgaa/criteres/11-formulaires/11.13/annexe.md","filePath":"rgaa/criteres/11-formulaires/11.13/annexe.md"}'),r={name:"rgaa/criteres/11-formulaires/11.13/annexe.md"};function n(u,e,i,l,c,d){return a(),o("div",null,[...e[0]||(e[0]=[s('<h4 id="notes-techniques" tabindex="-1">Notes techniques <a class="header-anchor" href="#notes-techniques" aria-label="Permalink to &quot;Notes techniques&quot;">​</a></h4><p>La <a href="#liste-des-valeurs-possibles-pour-l-attribut-autocomplete">liste des valeurs possibles pour l’attribut <code>autocomplete</code></a> repose sur la liste des valeurs présentes dans la spécification WCAG2.1 qui reprend elle-même la liste des valeurs de type “field name” de la spécification HTML5.2. Le critère WCAG demande à ce que l’une de ces valeurs soit présente pour qualifier un champ de saisie concernant l’utilisateur.</p><p>Ce que le critère WCAG laisse implicite, ce sont les différentes règles de construction possibles pour obtenir une valeur (simple ou composée) pour l’attribut <code>autocomplete</code>. C’est cependant l’affaire du développeur de fournir à l’attribut <code>autocomplete</code> une valeur ou un ensemble de valeurs valides au regard des exigences de l’algorithme fourni par la spécification HTML5.2. Ainsi, un attribut <code>autocomplete</code> ne peut contenir qu’une seule valeur de type <code>“field name”</code>, comme <code>&quot;name&quot;</code> ou <code>&quot;street-address&quot;</code>. On peut avoir également un ensemble composé de différentes valeurs comme, par exemple, <code>autocomplete=&quot;shipping name&quot;</code> ou <code>autocomplete=&quot;section-software shipping street-address&quot;</code> : <code>&quot;section-software&quot;</code> renvoie à une valeur de type <span lang="en">“scope”</span> et <code>&quot;shipping&quot;</code> à une valeur de type <span lang="en">“hint set”</span>, mais toujours une seule valeur de type <span lang="en">“field name”</span>.</p>',3)])])}const f=t(r,[["render",n]]);export{m as __pageData,f as default};
