import{_ as t,c as i,o as l,ag as a}from"./chunks/framework.BSOECjnK.js";const g=JSON.parse('{"title":"Chaque image vectorielle (balise <svg>) porteuse d’information, vérifie-t-elle ces conditions ?","description":"","frontmatter":{"title":"Chaque image vectorielle (balise `<svg>`) [porteuse d’information](#image-porteuse-d-information), vérifie-t-elle ces conditions ?","steps":["La balise `<svg>` possède un attribut WAI-ARIA `role=\\"img\\"` ;","La balise `<svg>` a une [alternative textuelle](#alternative-textuelle-image)."]},"headers":[],"relativePath":"rgaa/criteres/1-images/1.1/tests/5.md","filePath":"rgaa/criteres/1-images/1.1/tests/5.md"}'),s={name:"rgaa/criteres/1-images/1.1/tests/5.md"};function o(r,e,n,c,d,u){return l(),i("div",null,[...e[0]||(e[0]=[a("<ol><li>Retrouver dans le document les éléments <code>&lt;svg&gt;</code> ;</li><li>Pour chaque élément <code>&lt;svg&gt;</code>, déterminer si l’image est porteuse d’information ;</li><li>S’assurer que l’élément <code>&lt;svg&gt;</code> est pourvu d’un attribut WAI-ARIA <code>role=&quot;img&quot;</code> ;</li><li>Si ce n’est pas le cas, le test est invalidé.</li><li>Le cas échéant, vérifier que l’élément <code>&lt;svg&gt;</code> est pourvu au moins d’une alternative textuelle parmi les suivantes : <ul><li>Contenu de l’élément <code>&lt;title&gt;</code> ;</li><li>Passage de texte associé via l’attribut WAI-ARIA <code>aria-labelledby</code> ;</li><li>Contenu de l’attribut WAI-ARIA <code>aria-label</code> ;</li></ul></li><li>Si au moins une alternative textuelle est trouvée, <strong>le test est validé</strong>.</li></ol>",1)])])}const v=t(s,[["render",o]]);export{g as __pageData,v as default};
