import{_ as i,c as t,o as a,ag as l}from"./chunks/framework.BSOECjnK.js";const b=JSON.parse('{"title":"Chaque champ de formulaire ayant un intitulé visible vérifie-t-il ces conditions (hors cas particuliers) ?","description":"","frontmatter":{"title":"Chaque [champ de formulaire](#champ-de-saisie-de-formulaire) ayant un [intitulé visible](#intitule-visible) vérifie-t-il ces conditions (hors cas particuliers) ?","steps":["S’il est présent, le contenu de l’attribut WAI-ARIA `aria-label` du [champ de formulaire](#champ-de-saisie-de-formulaire) contient au moins l’[intitulé visible](#intitule-visible) ;","S’il est présent, le [passage de texte](#passage-de-texte-lie-par-aria-labelledby-ou-aria-describedby) lié au [champ de formulaire](#champ-de-saisie-de-formulaire) via un attribut WAI-ARIA `aria-labelledby` contient au moins l’[intitulé visible](#intitule-visible) ;","S’il est présent, le contenu de l’attribut `title` du [champ de formulaire](#champ-de-saisie-de-formulaire) contient au moins l’[intitulé visible](#intitule-visible) ;","S’il est présent le contenu de la balise `<label>` associé au [champ de formulaire](#champ-de-saisie-de-formulaire) contient au moins l’[intitulé visible](#intitule-visible)."]},"headers":[],"relativePath":"rgaa/criteres/11-formulaires/11.2/tests/5.md","filePath":"rgaa/criteres/11-formulaires/11.2/tests/5.md"}'),r={name:"rgaa/criteres/11-formulaires/11.2/tests/5.md"};function s(o,e,u,n,d,c){return a(),t("div",null,[...e[0]||(e[0]=[l("<ol><li>Retrouver dans le document les champs de formulaire dont l’étiquette est fournie à la fois par un intitulé visible et par le contenu soit d’un élément <code>&lt;label&gt;</code>, soit d’un attribut <code>title</code> ou d’un attribut <code>aria-label</code> ou d’un attribut <code>aria-labelledby</code> ;</li><li>Pour chaque champ de formulaire, vérifier que le contenu de l’élément <code>&lt;label&gt;</code> ou de l’attribut <code>title</code> ou de l’attribut <code>aria-label</code> ou de l’attribut <code>aria-labelledby</code> contient l’intitulé visible ;</li><li>Si c’est le cas pour chaque champ de formulaire, <strong>le test est validé</strong>.</li></ol>",1)])])}const p=i(r,[["render",s]]);export{b as __pageData,p as default};
