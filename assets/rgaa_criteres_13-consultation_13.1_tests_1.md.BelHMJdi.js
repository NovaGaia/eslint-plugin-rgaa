import{_ as t,c as s,o as a,ag as i}from"./chunks/framework.BSOECjnK.js";const p=JSON.parse('{"title":"Pour chaque page web, chaque procédé de rafraîchissement (balise <object>, balise <embed>, balise <svg>, balise <canvas>, balise <meta>) vérifie-t-il une de ces conditions (hors cas particuliers) ?","description":"","frontmatter":{"title":"Pour chaque page web, chaque [procédé de rafraîchissement](#procede-de-rafraichissement) (balise `<object>`, balise `<embed>`, balise `<svg>`, balise `<canvas>`, balise `<meta>`) vérifie-t-il une de ces conditions (hors cas particuliers) ?","steps":["L’utilisateur peut arrêter ou relancer le rafraîchissement ;","L’utilisateur peut augmenter la limite de temps entre deux rafraîchissements de dix fois, au moins ;","L’utilisateur est averti de l’imminence du rafraîchissement et dispose de vingt secondes, au moins, pour augmenter la limite de temps avant le prochain rafraîchissement ;","La limite de temps entre deux rafraîchissements est de vingt heures, au moins."]},"headers":[],"relativePath":"rgaa/criteres/13-consultation/13.1/tests/1.md","filePath":"rgaa/criteres/13-consultation/13.1/tests/1.md"}'),r={name:"rgaa/criteres/13-consultation/13.1/tests/1.md"};function n(l,e,c,o,u,d){return a(),s("div",null,[...e[0]||(e[0]=[i("<ol><li>Retrouver dans le document les rafraîchissements initiés dans le contenu par un élément <code>&lt;object&gt;</code>, <code>&lt;embed&gt;</code>, <code>&lt;svg&gt;</code>, <code>&lt;canvas&gt;</code> ou par un élément <code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;[compteur]&quot;&gt;</code> (dans l’élément <code>&lt;head&gt;</code> de la page) ;</li><li>Pour chaque rafraîchissement, vérifier que : <ul><li>Soit la présence d’un mécanisme permet à l’utilisateur de stopper et de relancer le rafraîchissement ;</li><li>Soit la présence d’un mécanisme permet à l’utilisateur d’augmenter la limite de temps entre deux rafraîchissements de dix fois, au moins ;</li><li>Soit la présence d’un mécanisme qui avertit l’utilisateur de l’imminence du rafraîchissement, laisse 20 secondes, au moins, à l’utilisateur, pour augmenter la limite de temps avant le prochain rafraîchissement ;</li><li>Soit la limite de temps entre deux rafraîchissements est de vingt heures, au moins.</li></ul></li><li>Si c’est le cas, <strong>le test est validé</strong>.</li></ol>",1)])])}const h=t(r,[["render",n]]);export{p as __pageData,h as default};
