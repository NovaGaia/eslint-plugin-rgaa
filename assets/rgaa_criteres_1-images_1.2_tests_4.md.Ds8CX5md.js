import{_ as t,c as s,o as a,ag as i}from"./chunks/framework.BSOECjnK.js";const m=JSON.parse('{"title":"Chaque image vectorielle (balise <svg>) de décoration, sans légende, vérifie-t-elle ces conditions ?","description":"","frontmatter":{"title":"Chaque image vectorielle (balise `<svg>`) [de décoration](#image-de-decoration), sans [légende](#legende-d-image), vérifie-t-elle ces conditions ?","steps":["La balise `<svg>` possède un attribut WAI-ARIA `aria-hidden=\\"true\\"` ;","La balise `<svg>` et ses enfants sont dépourvus d’[alternative textuelle](#alternative-textuelle-image) ;","Les balises `<title>` et `<desc>` sont absentes ou vides ;","La balise `<svg>` et ses enfants sont dépourvus d’attribut `title`."]},"headers":[],"relativePath":"rgaa/criteres/1-images/1.2/tests/4.md","filePath":"rgaa/criteres/1-images/1.2/tests/4.md"}'),l={name:"rgaa/criteres/1-images/1.2/tests/4.md"};function o(d,e,n,r,c,u){return a(),s("div",null,[...e[0]||(e[0]=[i("<ol><li>Retrouver dans le document les images décoratives dépourvues de légende structurées au moyen d’un élément <code>&lt;svg&gt;</code> ;</li><li>Pour chaque image, vérifier que l’élément <code>&lt;svg&gt;</code> ne possède pas d’attributs <code>aria-labelledby</code> ou <code>aria-label</code> et qu’il : <ul><li>Possède un attribut WAI-ARIA <code>aria-hidden=&quot;true&quot;</code> ;</li><li>Et est dépourvu d’alternative textuelle (ainsi que ses éléments enfants) ;</li><li>Et ne contient pas d’éléments <code>&lt;title&gt;</code> et <code>&lt;desc&gt;</code> à moins que vides de contenu ;</li><li>Et est dépourvu d’attribut <code>title</code> (ainsi que ses éléments enfants).</li></ul></li><li>Si c’est le cas pour chaque image, <strong>le test est validé</strong>.</li></ol>",1)])])}const v=t(l,[["render",o]]);export{m as __pageData,v as default};
