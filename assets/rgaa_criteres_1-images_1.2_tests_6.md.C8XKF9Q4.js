import{_ as t,c as a,o as i,ag as s}from"./chunks/framework.BSOECjnK.js";const g=JSON.parse('{"title":"Chaque image embarquée (balise <embed> avec l’attribut type=\\"image/…\\") de décoration, sans légende, vérifie-t-elle ces conditions ?","description":"","frontmatter":{"title":"Chaque image embarquée (balise `<embed>` avec l’attribut `type=\\"image/…\\"`) [de décoration](#image-de-decoration), sans [légende](#legende-d-image), vérifie-t-elle ces conditions ?","steps":["La balise `<embed>` possède un attribut WAI-ARIA `aria-hidden=\\"true\\"` ;","La balise `<embed>` et ses enfants sont dépourvus d’[alternative textuelle](#alternative-textuelle-image)."]},"headers":[],"relativePath":"rgaa/criteres/1-images/1.2/tests/6.md","filePath":"rgaa/criteres/1-images/1.2/tests/6.md"}'),d={name:"rgaa/criteres/1-images/1.2/tests/6.md"};function l(o,e,r,n,u,c){return i(),a("div",null,[...e[0]||(e[0]=[s("<ol><li>Retrouver dans le document les images décoratives dépourvues de légende structurées au moyen d’un élément <code>&lt;embed&gt;</code> (avec un attribut <code>type=&quot;image/…&quot;</code>) ;</li><li>Pour chaque image, vérifier que l’élément <code>&lt;embed&gt;</code> ne possède pas d’attributs <code>aria-labelledby</code>, <code>aria-label</code> ou <code>title</code> et qu’il : <ul><li>Possède un attribut WAI-ARIA <code>aria-hidden=&quot;true&quot;</code> ;</li><li>Et est dépourvu d’alternative textuelle ;</li></ul></li><li>Si c’est le cas pour chaque image, <strong>le test est validé</strong>.</li></ol>",1)])])}const p=t(d,[["render",l]]);export{g as __pageData,p as default};
